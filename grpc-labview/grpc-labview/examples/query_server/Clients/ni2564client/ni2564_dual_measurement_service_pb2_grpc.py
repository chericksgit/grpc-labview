# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ni2564_dual_measurement_service_pb2 as ni2564__dual__measurement__service__pb2


class MeasurementServiceStub(object):
    """---------------------------------------------------------------------
    The MeasurementService service definition.
    ---------------------------------------------------------------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Invoke = channel.unary_unary(
                '/measurementservice.MeasurementService/Invoke',
                request_serializer=ni2564__dual__measurement__service__pb2.InvokeRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.InvokeResponse.FromString,
                )
        self.Query = channel.unary_unary(
                '/measurementservice.MeasurementService/Query',
                request_serializer=ni2564__dual__measurement__service__pb2.QueryRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.QueryResponse.FromString,
                )
        self.Register = channel.unary_stream(
                '/measurementservice.MeasurementService/Register',
                request_serializer=ni2564__dual__measurement__service__pb2.RegistrationRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.ServerEvent.FromString,
                )
        self.OpenNI2564ASession = channel.unary_unary(
                '/measurementservice.MeasurementService/OpenNI2564ASession',
                request_serializer=ni2564__dual__measurement__service__pb2.NI2564OpenSessionRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.NI2564OpenSessionResponse.FromString,
                )
        self.CloseNI2564AChannel = channel.unary_unary(
                '/measurementservice.MeasurementService/CloseNI2564AChannel',
                request_serializer=ni2564__dual__measurement__service__pb2.NI2564CloseChannelRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.NI2564CloseChannelResponse.FromString,
                )
        self.OpenNI2564AChannel = channel.unary_unary(
                '/measurementservice.MeasurementService/OpenNI2564AChannel',
                request_serializer=ni2564__dual__measurement__service__pb2.NI2564OpenChannelRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.NI2564OpenChannelResponse.FromString,
                )
        self.DisconnectAllNI2564AChannels = channel.unary_unary(
                '/measurementservice.MeasurementService/DisconnectAllNI2564AChannels',
                request_serializer=ni2564__dual__measurement__service__pb2.NI2564DisconnectAllRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.NI2564DisconnectAllResponse.FromString,
                )
        self.CloseNI2564ASession = channel.unary_unary(
                '/measurementservice.MeasurementService/CloseNI2564ASession',
                request_serializer=ni2564__dual__measurement__service__pb2.NI2564CloseSessionRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.NI2564CloseSessionResponse.FromString,
                )
        self.ResetNI2564A = channel.unary_unary(
                '/measurementservice.MeasurementService/ResetNI2564A',
                request_serializer=ni2564__dual__measurement__service__pb2.NI2564ResetRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.NI2564ResetResponse.FromString,
                )
        self.OpenNI2564BSession = channel.unary_unary(
                '/measurementservice.MeasurementService/OpenNI2564BSession',
                request_serializer=ni2564__dual__measurement__service__pb2.NI2564OpenSessionRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.NI2564OpenSessionResponse.FromString,
                )
        self.CloseNI2564BChannel = channel.unary_unary(
                '/measurementservice.MeasurementService/CloseNI2564BChannel',
                request_serializer=ni2564__dual__measurement__service__pb2.NI2564CloseChannelRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.NI2564CloseChannelResponse.FromString,
                )
        self.OpenNI2564BChannel = channel.unary_unary(
                '/measurementservice.MeasurementService/OpenNI2564BChannel',
                request_serializer=ni2564__dual__measurement__service__pb2.NI2564OpenChannelRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.NI2564OpenChannelResponse.FromString,
                )
        self.DisconnectAllNI2564BChannels = channel.unary_unary(
                '/measurementservice.MeasurementService/DisconnectAllNI2564BChannels',
                request_serializer=ni2564__dual__measurement__service__pb2.NI2564DisconnectAllRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.NI2564DisconnectAllResponse.FromString,
                )
        self.CloseNI2564BSession = channel.unary_unary(
                '/measurementservice.MeasurementService/CloseNI2564BSession',
                request_serializer=ni2564__dual__measurement__service__pb2.NI2564CloseSessionRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.NI2564CloseSessionResponse.FromString,
                )
        self.ResetNI2564B = channel.unary_unary(
                '/measurementservice.MeasurementService/ResetNI2564B',
                request_serializer=ni2564__dual__measurement__service__pb2.NI2564ResetRequest.SerializeToString,
                response_deserializer=ni2564__dual__measurement__service__pb2.NI2564ResetResponse.FromString,
                )


class MeasurementServiceServicer(object):
    """---------------------------------------------------------------------
    The MeasurementService service definition.
    ---------------------------------------------------------------------
    """

    def Invoke(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Query(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenNI2564ASession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseNI2564AChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenNI2564AChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectAllNI2564AChannels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseNI2564ASession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetNI2564A(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenNI2564BSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseNI2564BChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenNI2564BChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectAllNI2564BChannels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseNI2564BSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetNI2564B(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MeasurementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Invoke': grpc.unary_unary_rpc_method_handler(
                    servicer.Invoke,
                    request_deserializer=ni2564__dual__measurement__service__pb2.InvokeRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.InvokeResponse.SerializeToString,
            ),
            'Query': grpc.unary_unary_rpc_method_handler(
                    servicer.Query,
                    request_deserializer=ni2564__dual__measurement__service__pb2.QueryRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.QueryResponse.SerializeToString,
            ),
            'Register': grpc.unary_stream_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=ni2564__dual__measurement__service__pb2.RegistrationRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.ServerEvent.SerializeToString,
            ),
            'OpenNI2564ASession': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenNI2564ASession,
                    request_deserializer=ni2564__dual__measurement__service__pb2.NI2564OpenSessionRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.NI2564OpenSessionResponse.SerializeToString,
            ),
            'CloseNI2564AChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseNI2564AChannel,
                    request_deserializer=ni2564__dual__measurement__service__pb2.NI2564CloseChannelRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.NI2564CloseChannelResponse.SerializeToString,
            ),
            'OpenNI2564AChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenNI2564AChannel,
                    request_deserializer=ni2564__dual__measurement__service__pb2.NI2564OpenChannelRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.NI2564OpenChannelResponse.SerializeToString,
            ),
            'DisconnectAllNI2564AChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectAllNI2564AChannels,
                    request_deserializer=ni2564__dual__measurement__service__pb2.NI2564DisconnectAllRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.NI2564DisconnectAllResponse.SerializeToString,
            ),
            'CloseNI2564ASession': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseNI2564ASession,
                    request_deserializer=ni2564__dual__measurement__service__pb2.NI2564CloseSessionRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.NI2564CloseSessionResponse.SerializeToString,
            ),
            'ResetNI2564A': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetNI2564A,
                    request_deserializer=ni2564__dual__measurement__service__pb2.NI2564ResetRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.NI2564ResetResponse.SerializeToString,
            ),
            'OpenNI2564BSession': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenNI2564BSession,
                    request_deserializer=ni2564__dual__measurement__service__pb2.NI2564OpenSessionRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.NI2564OpenSessionResponse.SerializeToString,
            ),
            'CloseNI2564BChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseNI2564BChannel,
                    request_deserializer=ni2564__dual__measurement__service__pb2.NI2564CloseChannelRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.NI2564CloseChannelResponse.SerializeToString,
            ),
            'OpenNI2564BChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenNI2564BChannel,
                    request_deserializer=ni2564__dual__measurement__service__pb2.NI2564OpenChannelRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.NI2564OpenChannelResponse.SerializeToString,
            ),
            'DisconnectAllNI2564BChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectAllNI2564BChannels,
                    request_deserializer=ni2564__dual__measurement__service__pb2.NI2564DisconnectAllRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.NI2564DisconnectAllResponse.SerializeToString,
            ),
            'CloseNI2564BSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseNI2564BSession,
                    request_deserializer=ni2564__dual__measurement__service__pb2.NI2564CloseSessionRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.NI2564CloseSessionResponse.SerializeToString,
            ),
            'ResetNI2564B': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetNI2564B,
                    request_deserializer=ni2564__dual__measurement__service__pb2.NI2564ResetRequest.FromString,
                    response_serializer=ni2564__dual__measurement__service__pb2.NI2564ResetResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'measurementservice.MeasurementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MeasurementService(object):
    """---------------------------------------------------------------------
    The MeasurementService service definition.
    ---------------------------------------------------------------------
    """

    @staticmethod
    def Invoke(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/Invoke',
            ni2564__dual__measurement__service__pb2.InvokeRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.InvokeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/Query',
            ni2564__dual__measurement__service__pb2.QueryRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.QueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/measurementservice.MeasurementService/Register',
            ni2564__dual__measurement__service__pb2.RegistrationRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.ServerEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenNI2564ASession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/OpenNI2564ASession',
            ni2564__dual__measurement__service__pb2.NI2564OpenSessionRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.NI2564OpenSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseNI2564AChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/CloseNI2564AChannel',
            ni2564__dual__measurement__service__pb2.NI2564CloseChannelRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.NI2564CloseChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenNI2564AChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/OpenNI2564AChannel',
            ni2564__dual__measurement__service__pb2.NI2564OpenChannelRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.NI2564OpenChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisconnectAllNI2564AChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/DisconnectAllNI2564AChannels',
            ni2564__dual__measurement__service__pb2.NI2564DisconnectAllRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.NI2564DisconnectAllResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseNI2564ASession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/CloseNI2564ASession',
            ni2564__dual__measurement__service__pb2.NI2564CloseSessionRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.NI2564CloseSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetNI2564A(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/ResetNI2564A',
            ni2564__dual__measurement__service__pb2.NI2564ResetRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.NI2564ResetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenNI2564BSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/OpenNI2564BSession',
            ni2564__dual__measurement__service__pb2.NI2564OpenSessionRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.NI2564OpenSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseNI2564BChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/CloseNI2564BChannel',
            ni2564__dual__measurement__service__pb2.NI2564CloseChannelRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.NI2564CloseChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenNI2564BChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/OpenNI2564BChannel',
            ni2564__dual__measurement__service__pb2.NI2564OpenChannelRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.NI2564OpenChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisconnectAllNI2564BChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/DisconnectAllNI2564BChannels',
            ni2564__dual__measurement__service__pb2.NI2564DisconnectAllRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.NI2564DisconnectAllResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseNI2564BSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/CloseNI2564BSession',
            ni2564__dual__measurement__service__pb2.NI2564CloseSessionRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.NI2564CloseSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetNI2564B(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/measurementservice.MeasurementService/ResetNI2564B',
            ni2564__dual__measurement__service__pb2.NI2564ResetRequest.SerializeToString,
            ni2564__dual__measurement__service__pb2.NI2564ResetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
