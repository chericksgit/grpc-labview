# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: query_server.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import AsyncGenerator

import betterproto
import grpclib


@dataclass
class InvokeRequest(betterproto.Message):
    """
    ---------------------------------------------------------------------------
    ---------------------------------------------------------------
    """

    command: str = betterproto.string_field(1)
    parameter: str = betterproto.string_field(2)


@dataclass
class InvokeResponse(betterproto.Message):
    """
    ---------------------------------------------------------------------------
    ---------------------------------------------------------------
    """

    status: int = betterproto.int32_field(1)


@dataclass
class QueryRequest(betterproto.Message):
    """
    ---------------------------------------------------------------------------
    ---------------------------------------------------------------
    """

    query: str = betterproto.string_field(1)


@dataclass
class QueryResponse(betterproto.Message):
    """
    ---------------------------------------------------------------------
    Result message from the Query RPC
    method---------------------------------------------------------------------
    """

    # The string result of the server query
    message: str = betterproto.string_field(1)
    # status result of the server query
    status: int = betterproto.int32_field(2)


@dataclass
class RegistrationRequest(betterproto.Message):
    """
    ---------------------------------------------------------------------------
    ---------------------------------------------------------------
    """

    event_name: str = betterproto.string_field(1)


@dataclass
class ServerEvent(betterproto.Message):
    """
    ---------------------------------------------------------------------------
    ---------------------------------------------------------------
    """

    event_data: str = betterproto.string_field(1)
    server_id: int = betterproto.int32_field(2)
    status: int = betterproto.int32_field(3)


class QueryServerStub(betterproto.ServiceStub):
    """
    --------------------------------------------------------------------- The
    QueryServer service definition.--------------------------------------------
    -------------------------
    """

    async def invoke(self, *, command: str = "", parameter: str = "") -> InvokeResponse:
        request = InvokeRequest()
        request.command = command
        request.parameter = parameter

        return await self._unary_unary(
            "/queryserver.QueryServer/Invoke",
            request,
            InvokeResponse,
        )

    async def query(self, *, query: str = "") -> QueryResponse:
        request = QueryRequest()
        request.query = query

        return await self._unary_unary(
            "/queryserver.QueryServer/Query",
            request,
            QueryResponse,
        )

    async def register(
        self, *, event_name: str = ""
    ) -> AsyncGenerator[ServerEvent, None]:
        request = RegistrationRequest()
        request.event_name = event_name

        async for response in self._unary_stream(
            "/queryserver.QueryServer/Register",
            request,
            ServerEvent,
        ):
            yield response
